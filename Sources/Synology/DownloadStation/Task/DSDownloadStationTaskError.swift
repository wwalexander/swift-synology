public enum DSDownloadStationTaskError: String, Decodable {
    case brokenLink = "broken_link"
    case destinationDoesNotExist = "destination_not_exist"
    case destinationDenied = "destination_denied"
    case diskFull = "disk_full"
    case quotaReached = "quota_reached"
    case timeout
    case exceededMaxFileSystemSize = "exceed_max_file_system_size"
    case exceededMaxDestinationSize = "exceed_max_destination_size"
    case exceededMaxTempSize = "exceed_max_temp_size"
    case encryptedNameTooLong = "encrypted_name_too_long"
    case nameTooLong = "name_too_long"
    case torrentDuplicate = "torrent_duplicate"
    case fileDoesNotExist = "file_not_exist"
    case requiresPremiumAccount = "required_premium_account"
    case typeNotSupported = "not_supported_type"
    case tryItLater = "try_it_later"
    case taskEncryption = "task_encryption"
    case missingPython = "missing_python"
    case privateVideo = "private_video"
    case ftpEncryptionNotSupported = "ftp_encryption_not_supported_type"
    case extractFailed = "extract_failed"
    case extractFailedWrongPassword = "extract_failed_wrong_password"
    case extractFailedInvalidArchive = "extract_failed_invalid_archive"
    case extractFailedQuotaReached = "extract_failed_quota_reached"
    case extractFailedDiskFull = "extract_failed_disk_full"
    case unknown = "unknown"
}

extension DSDownloadStationTaskError: Error {
    public var localizedDescription: String {
        switch self {
        case .brokenLink: "Broken link"
        case .destinationDoesNotExist: "Destination does not exist"
        case .destinationDenied: "Destination denied"
        case .diskFull: "Disk full"
        case .quotaReached: "Quota reached"
        case .timeout: "Timeout"
        case .exceededMaxFileSystemSize: "Exceeded maximum file system size"
        case .exceededMaxDestinationSize: "Exceeded maximum destination size"
        case .exceededMaxTempSize: "Exceeded maximum temporary size"
        case .encryptedNameTooLong: "Encrypted name is too long"
        case .nameTooLong: "Name is too long"
        case .torrentDuplicate: "Duplicate torrent"
        case .fileDoesNotExist: "File does not exist"
        case .requiresPremiumAccount: "Requires premium account"
        case .typeNotSupported: "Type not supported"
        case .tryItLater: "Try it later"
        case .taskEncryption: "Task encryption"
        case .missingPython: "Missing Python"
        case .privateVideo: "Private video"
        case .ftpEncryptionNotSupported: "FTP encryption not supported"
        case .extractFailed: "Extract failed"
        case .extractFailedWrongPassword: "Extract failed (wrong password)"
        case .extractFailedInvalidArchive: "Extract failed (invalid archive)"
        case .extractFailedQuotaReached: "Extract failed (quota reached)"
        case .extractFailedDiskFull: "Extract failed (disk full)"
        case .unknown: "Unknown"
        }
    }
}
